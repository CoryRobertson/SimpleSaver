plugins
        {
            id 'java'
            id 'idea'
            id 'application'
            id 'distribution'
        }

group 'com.github.coryrobertson'
version '1.4-SNAPSHOT'

repositories
        {
            mavenCentral()
        }

clean.doFirst
        {
            delete "saves/"
            println "Cleaning save files"
        }

test.doFirst
        {
            delete "saves/"
            println "Cleaning save files"
        }

test
        {
            useJUnitPlatform()
        }

task networkSenderJar(type: Jar)
{
    mainClassName = 'com.github.coryrobertson.simplesaver.NetworkSender'
    manifest
            {
                attributes 'Main-Class': 'com.github.coryrobertson.simplesaver.NetworkSender'
            }
    from sourceSets.main.output
    baseName = 'SenderJar'
}

task networkReceiverJar(type: Jar)
{
    mainClassName = 'com.github.coryrobertson.simplesaver.NetworkReceiver'
    manifest
            {
                attributes 'Main-Class': 'com.github.coryrobertson.simplesaver.NetworkReceiver'
            }
    from sourceSets.main.output
    baseName = 'ReceiverJar'
}

task networkReceiverStartScript(type: CreateStartScripts)
{
    outputDir = file('build/scripts/')
    mainClass = 'com.github.coryrobertson.simplesaver.NetworkReceiver'
    applicationName = 'StartNetworkReciever'
    classpath = files('libs/' + networkReceiverJar.archiveFileName.get())
}

task networkSenderStartScript(type: CreateStartScripts)
{
    outputDir = file('build/scripts/')
    mainClass = 'com.github.coryrobertson.simplesaver.NetworkSender'
    applicationName = 'StartNetworkSender'
    classpath = files('libs/' + networkSenderJar.archiveFileName.get())
}

//jar.dependsOn networkSenderJar
//jar.dependsOn networkReceiverJar

//startScripts.dependsOn networkSenderStartScript
//startScripts.dependsOn networkReceiverStartScript

dependencies
        {
            testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
            testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
            //runtimeOnly files('build/libs/' + networkReceiverJar.archiveFileName.get())
            //runtimeOnly files('build/libs/' + networkSenderJar.archiveFileName.get())


        }

tasks.withType(Tar){
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

tasks.withType(Zip){
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

jar.dependsOn networkSenderJar
jar.dependsOn networkReceiverJar

distributions
        {
            main
                    {
                        contents
                                {
                                    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
                                    from (networkSenderStartScript) {into 'bin'}
                                    from (networkReceiverStartScript) {into 'bin'}
                                    from (networkReceiverJar) {into 'lib'}
                                    from (networkSenderJar) {into 'lib'}
                                }
                    }
            networkSender
                    {
                        distributionBaseName = 'networkSender'

                        contents
                                {
                                    from ('build/libs/' + networkSenderJar.archiveFileName.get()) {into 'lib'}
                                    from (networkSenderStartScript) {into 'bin'}

                                }
                    }
            networkReceiver
                    {
                        distributionBaseName = 'networkReceiver'
                        contents
                                {
                                    from ('build/libs/' + networkReceiverJar.archiveFileName.get()) {into 'lib'}
                                    from (networkReceiverStartScript) {into 'bin'}

                                }
                    }


        }

